//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace stopwatchSE.TestSuite {
    using System;
    using System.Collections.Generic;
    using System.Text;
    using System.Reflection;
    using Microsoft.SpecExplorer.Runtime.Testing;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Spec Explorer", "3.5.3130.0")]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class StopwatchTests : VsTestClassBase {
        
        public StopwatchTests() {
            this.SetSwitch("ProceedControlTimeout", "100");
            this.SetSwitch("QuiescenceTimeout", "30000");
        }
        
        #region Variables
        private IVariable<stopwatchImp.StopwatchCS> o;
        #endregion
        
        #region Test Initialization and Cleanup
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize() {
            this.InitializeTestManager();
            this.o = this.Manager.CreateVariable<stopwatchImp.StopwatchCS>("o");
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void TestCleanup() {
            this.CleanupTestManager();
        }
        #endregion
        
        #region Test Starting in S0
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void StopwatchTestsS0() {
            this.Manager.BeginTest("StopwatchTestsS0");
            this.Manager.Comment("reaching state \'S0\'");
            stopwatchImp.StopwatchCS temp0;
            this.Manager.Comment("executing step \'call new StopwatchModelProgram#0.StopwatchCS()\'");
            temp0 = new stopwatchImp.StopwatchCS();
            this.Manager.Comment("reaching state \'S1\'");
            this.Manager.Comment("checking step \'return new StopwatchModelProgram#0.StopwatchCS\'");
            TestManagerHelpers.AssertBind<stopwatchImp.StopwatchCS>(this.Manager, this.o, temp0, "this of stopwatchImp.StopwatchCS, state S1");
            this.Manager.Comment("reaching state \'S16\'");
            string temp1;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp1 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S24\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"DateTime\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "DateTime", temp1, "return of getMode, state S24");
            this.Manager.Comment("reaching state \'S32\'");
            string temp2;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp2 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S40\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Reset\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Reset", temp2, "return of getTimerState, state S40");
            this.Manager.Comment("reaching state \'S48\'");
            bool temp3;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp3 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S56\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp3, "return of isTimerFrozen, state S56");
            this.Manager.Comment("reaching state \'S64\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.modeButton()\'");
            this.o.Value.modeButton();
            this.Manager.Comment("reaching state \'S72\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.modeButton\'");
            this.Manager.Comment("reaching state \'S80\'");
            string temp4;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp4 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S88\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp4, "return of getMode, state S88");
            this.Manager.Comment("reaching state \'S96\'");
            string temp5;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp5 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S104\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Reset\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Reset", temp5, "return of getTimerState, state S104");
            this.Manager.Comment("reaching state \'S112\'");
            bool temp6;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp6 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S120\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp6, "return of isTimerFrozen, state S120");
            this.Manager.Comment("reaching state \'S128\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.modeButton()\'");
            this.o.Value.modeButton();
            this.Manager.Comment("reaching state \'S136\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.modeButton\'");
            this.Manager.Comment("reaching state \'S144\'");
            string temp7;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp7 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S152\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"DateTime\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "DateTime", temp7, "return of getMode, state S152");
            this.Manager.Comment("reaching state \'S160\'");
            string temp8;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp8 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S168\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Reset\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Reset", temp8, "return of getTimerState, state S168");
            this.Manager.Comment("reaching state \'S176\'");
            bool temp9;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp9 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S184\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp9, "return of isTimerFrozen, state S184");
            this.Manager.Comment("reaching state \'S192\'");
            this.Manager.EndTest();
        }
        #endregion
        
        #region Test Starting in S10
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void StopwatchTestsS10() {
            this.Manager.BeginTest("StopwatchTestsS10");
            this.Manager.Comment("reaching state \'S10\'");
            stopwatchImp.StopwatchCS temp10;
            this.Manager.Comment("executing step \'call new StopwatchModelProgram#0.StopwatchCS()\'");
            temp10 = new stopwatchImp.StopwatchCS();
            this.Manager.Comment("reaching state \'S11\'");
            this.Manager.Comment("checking step \'return new StopwatchModelProgram#0.StopwatchCS\'");
            TestManagerHelpers.AssertBind<stopwatchImp.StopwatchCS>(this.Manager, this.o, temp10, "this of stopwatchImp.StopwatchCS, state S11");
            this.Manager.Comment("reaching state \'S21\'");
            string temp11;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp11 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S29\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"DateTime\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "DateTime", temp11, "return of getMode, state S29");
            this.Manager.Comment("reaching state \'S37\'");
            string temp12;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp12 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S45\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Reset\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Reset", temp12, "return of getTimerState, state S45");
            this.Manager.Comment("reaching state \'S53\'");
            bool temp13;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp13 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S61\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp13, "return of isTimerFrozen, state S61");
            this.Manager.Comment("reaching state \'S69\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.modeButton()\'");
            this.o.Value.modeButton();
            this.Manager.Comment("reaching state \'S77\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.modeButton\'");
            this.Manager.Comment("reaching state \'S85\'");
            string temp14;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp14 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S93\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp14, "return of getMode, state S93");
            this.Manager.Comment("reaching state \'S101\'");
            string temp15;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp15 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S109\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Reset\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Reset", temp15, "return of getTimerState, state S109");
            this.Manager.Comment("reaching state \'S117\'");
            bool temp16;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp16 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S125\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp16, "return of isTimerFrozen, state S125");
            this.Manager.Comment("reaching state \'S133\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.startStopButton()\'");
            this.o.Value.startStopButton();
            this.Manager.Comment("reaching state \'S141\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.startStopButton\'");
            this.Manager.Comment("reaching state \'S149\'");
            string temp17;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp17 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S157\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp17, "return of getMode, state S157");
            this.Manager.Comment("reaching state \'S165\'");
            string temp18;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp18 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S173\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Running\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Running", temp18, "return of getTimerState, state S173");
            this.Manager.Comment("reaching state \'S181\'");
            bool temp19;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp19 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S189\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp19, "return of isTimerFrozen, state S189");
            this.Manager.Comment("reaching state \'S197\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.resetLapButton()\'");
            this.o.Value.resetLapButton();
            this.Manager.Comment("reaching state \'S204\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.resetLapButton\'");
            this.Manager.Comment("reaching state \'S211\'");
            string temp20;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp20 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S218\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp20, "return of getMode, state S218");
            this.Manager.Comment("reaching state \'S225\'");
            string temp21;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp21 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S232\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Running\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Running", temp21, "return of getTimerState, state S232");
            this.Manager.Comment("reaching state \'S239\'");
            bool temp22;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp22 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S246\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/True\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp22, "return of isTimerFrozen, state S246");
            this.Manager.Comment("reaching state \'S253\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.modeButton()\'");
            this.o.Value.modeButton();
            this.Manager.Comment("reaching state \'S260\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.modeButton\'");
            this.Manager.Comment("reaching state \'S267\'");
            string temp23;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp23 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S274\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"DateTime\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "DateTime", temp23, "return of getMode, state S274");
            this.Manager.Comment("reaching state \'S281\'");
            string temp24;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp24 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S288\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Running\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Running", temp24, "return of getTimerState, state S288");
            this.Manager.Comment("reaching state \'S295\'");
            bool temp25;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp25 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S302\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/True\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp25, "return of isTimerFrozen, state S302");
            this.Manager.Comment("reaching state \'S309\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.modeButton()\'");
            this.o.Value.modeButton();
            this.Manager.Comment("reaching state \'S313\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.modeButton\'");
            this.Manager.Comment("reaching state \'S315\'");
            string temp26;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp26 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S317\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp26, "return of getMode, state S317");
            this.Manager.Comment("reaching state \'S319\'");
            string temp27;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp27 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S321\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Running\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Running", temp27, "return of getTimerState, state S321");
            this.Manager.Comment("reaching state \'S323\'");
            bool temp28;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp28 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S325\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/True\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp28, "return of isTimerFrozen, state S325");
            this.Manager.Comment("reaching state \'S327\'");
            this.Manager.EndTest();
        }
        #endregion
        
        #region Test Starting in S12
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void StopwatchTestsS12() {
            this.Manager.BeginTest("StopwatchTestsS12");
            this.Manager.Comment("reaching state \'S12\'");
            stopwatchImp.StopwatchCS temp29;
            this.Manager.Comment("executing step \'call new StopwatchModelProgram#0.StopwatchCS()\'");
            temp29 = new stopwatchImp.StopwatchCS();
            this.Manager.Comment("reaching state \'S13\'");
            this.Manager.Comment("checking step \'return new StopwatchModelProgram#0.StopwatchCS\'");
            TestManagerHelpers.AssertBind<stopwatchImp.StopwatchCS>(this.Manager, this.o, temp29, "this of stopwatchImp.StopwatchCS, state S13");
            this.Manager.Comment("reaching state \'S22\'");
            string temp30;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp30 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S30\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"DateTime\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "DateTime", temp30, "return of getMode, state S30");
            this.Manager.Comment("reaching state \'S38\'");
            string temp31;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp31 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S46\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Reset\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Reset", temp31, "return of getTimerState, state S46");
            this.Manager.Comment("reaching state \'S54\'");
            bool temp32;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp32 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S62\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp32, "return of isTimerFrozen, state S62");
            this.Manager.Comment("reaching state \'S70\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.modeButton()\'");
            this.o.Value.modeButton();
            this.Manager.Comment("reaching state \'S78\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.modeButton\'");
            this.Manager.Comment("reaching state \'S86\'");
            string temp33;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp33 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S94\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp33, "return of getMode, state S94");
            this.Manager.Comment("reaching state \'S102\'");
            string temp34;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp34 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S110\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Reset\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Reset", temp34, "return of getTimerState, state S110");
            this.Manager.Comment("reaching state \'S118\'");
            bool temp35;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp35 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S126\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp35, "return of isTimerFrozen, state S126");
            this.Manager.Comment("reaching state \'S134\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.startStopButton()\'");
            this.o.Value.startStopButton();
            this.Manager.Comment("reaching state \'S142\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.startStopButton\'");
            this.Manager.Comment("reaching state \'S150\'");
            string temp36;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp36 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S158\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp36, "return of getMode, state S158");
            this.Manager.Comment("reaching state \'S166\'");
            string temp37;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp37 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S174\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Running\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Running", temp37, "return of getTimerState, state S174");
            this.Manager.Comment("reaching state \'S182\'");
            bool temp38;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp38 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S190\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp38, "return of isTimerFrozen, state S190");
            this.Manager.Comment("reaching state \'S198\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.resetLapButton()\'");
            this.o.Value.resetLapButton();
            this.Manager.Comment("reaching state \'S205\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.resetLapButton\'");
            this.Manager.Comment("reaching state \'S212\'");
            string temp39;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp39 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S219\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp39, "return of getMode, state S219");
            this.Manager.Comment("reaching state \'S226\'");
            string temp40;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp40 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S233\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Running\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Running", temp40, "return of getTimerState, state S233");
            this.Manager.Comment("reaching state \'S240\'");
            bool temp41;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp41 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S247\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/True\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp41, "return of isTimerFrozen, state S247");
            this.Manager.Comment("reaching state \'S254\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.startStopButton()\'");
            this.o.Value.startStopButton();
            this.Manager.Comment("reaching state \'S261\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.startStopButton\'");
            this.Manager.Comment("reaching state \'S268\'");
            string temp42;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp42 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S275\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp42, "return of getMode, state S275");
            this.Manager.Comment("reaching state \'S282\'");
            string temp43;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp43 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S289\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Stopped\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Stopped", temp43, "return of getTimerState, state S289");
            this.Manager.Comment("reaching state \'S296\'");
            bool temp44;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp44 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S303\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp44, "return of isTimerFrozen, state S303");
            this.Manager.Comment("reaching state \'S310\'");
            this.Manager.EndTest();
        }
        #endregion
        
        #region Test Starting in S14
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void StopwatchTestsS14() {
            this.Manager.BeginTest("StopwatchTestsS14");
            this.Manager.Comment("reaching state \'S14\'");
            stopwatchImp.StopwatchCS temp45;
            this.Manager.Comment("executing step \'call new StopwatchModelProgram#0.StopwatchCS()\'");
            temp45 = new stopwatchImp.StopwatchCS();
            this.Manager.Comment("reaching state \'S15\'");
            this.Manager.Comment("checking step \'return new StopwatchModelProgram#0.StopwatchCS\'");
            TestManagerHelpers.AssertBind<stopwatchImp.StopwatchCS>(this.Manager, this.o, temp45, "this of stopwatchImp.StopwatchCS, state S15");
            this.Manager.Comment("reaching state \'S23\'");
            string temp46;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp46 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S31\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"DateTime\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "DateTime", temp46, "return of getMode, state S31");
            this.Manager.Comment("reaching state \'S39\'");
            string temp47;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp47 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S47\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Reset\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Reset", temp47, "return of getTimerState, state S47");
            this.Manager.Comment("reaching state \'S55\'");
            bool temp48;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp48 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S63\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp48, "return of isTimerFrozen, state S63");
            this.Manager.Comment("reaching state \'S71\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.modeButton()\'");
            this.o.Value.modeButton();
            this.Manager.Comment("reaching state \'S79\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.modeButton\'");
            this.Manager.Comment("reaching state \'S87\'");
            string temp49;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp49 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S95\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp49, "return of getMode, state S95");
            this.Manager.Comment("reaching state \'S103\'");
            string temp50;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp50 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S111\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Reset\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Reset", temp50, "return of getTimerState, state S111");
            this.Manager.Comment("reaching state \'S119\'");
            bool temp51;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp51 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S127\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp51, "return of isTimerFrozen, state S127");
            this.Manager.Comment("reaching state \'S135\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.startStopButton()\'");
            this.o.Value.startStopButton();
            this.Manager.Comment("reaching state \'S143\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.startStopButton\'");
            this.Manager.Comment("reaching state \'S151\'");
            string temp52;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp52 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S159\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp52, "return of getMode, state S159");
            this.Manager.Comment("reaching state \'S167\'");
            string temp53;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp53 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S175\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Running\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Running", temp53, "return of getTimerState, state S175");
            this.Manager.Comment("reaching state \'S183\'");
            bool temp54;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp54 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S191\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp54, "return of isTimerFrozen, state S191");
            this.Manager.Comment("reaching state \'S199\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.resetLapButton()\'");
            this.o.Value.resetLapButton();
            this.Manager.Comment("reaching state \'S206\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.resetLapButton\'");
            this.Manager.Comment("reaching state \'S213\'");
            string temp55;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp55 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S220\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp55, "return of getMode, state S220");
            this.Manager.Comment("reaching state \'S227\'");
            string temp56;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp56 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S234\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Running\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Running", temp56, "return of getTimerState, state S234");
            this.Manager.Comment("reaching state \'S241\'");
            bool temp57;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp57 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S248\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/True\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, true, temp57, "return of isTimerFrozen, state S248");
            this.Manager.Comment("reaching state \'S255\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.resetLapButton()\'");
            this.o.Value.resetLapButton();
            this.Manager.Comment("reaching state \'S262\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.resetLapButton\'");
            this.Manager.Comment("reaching state \'S269\'");
            string temp58;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp58 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S276\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp58, "return of getMode, state S276");
            this.Manager.Comment("reaching state \'S283\'");
            string temp59;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp59 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S290\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Running\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Running", temp59, "return of getTimerState, state S290");
            this.Manager.Comment("reaching state \'S297\'");
            bool temp60;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp60 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S304\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp60, "return of isTimerFrozen, state S304");
            this.Manager.Comment("reaching state \'S311\'");
            this.Manager.EndTest();
        }
        #endregion
        
        #region Test Starting in S2
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void StopwatchTestsS2() {
            this.Manager.BeginTest("StopwatchTestsS2");
            this.Manager.Comment("reaching state \'S2\'");
            stopwatchImp.StopwatchCS temp61;
            this.Manager.Comment("executing step \'call new StopwatchModelProgram#0.StopwatchCS()\'");
            temp61 = new stopwatchImp.StopwatchCS();
            this.Manager.Comment("reaching state \'S3\'");
            this.Manager.Comment("checking step \'return new StopwatchModelProgram#0.StopwatchCS\'");
            TestManagerHelpers.AssertBind<stopwatchImp.StopwatchCS>(this.Manager, this.o, temp61, "this of stopwatchImp.StopwatchCS, state S3");
            this.Manager.Comment("reaching state \'S17\'");
            string temp62;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp62 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S25\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"DateTime\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "DateTime", temp62, "return of getMode, state S25");
            this.Manager.Comment("reaching state \'S33\'");
            string temp63;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp63 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S41\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Reset\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Reset", temp63, "return of getTimerState, state S41");
            this.Manager.Comment("reaching state \'S49\'");
            bool temp64;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp64 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S57\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp64, "return of isTimerFrozen, state S57");
            this.Manager.Comment("reaching state \'S65\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.modeButton()\'");
            this.o.Value.modeButton();
            this.Manager.Comment("reaching state \'S73\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.modeButton\'");
            this.Manager.Comment("reaching state \'S81\'");
            string temp65;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp65 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S89\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp65, "return of getMode, state S89");
            this.Manager.Comment("reaching state \'S97\'");
            string temp66;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp66 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S105\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Reset\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Reset", temp66, "return of getTimerState, state S105");
            this.Manager.Comment("reaching state \'S113\'");
            bool temp67;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp67 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S121\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp67, "return of isTimerFrozen, state S121");
            this.Manager.Comment("reaching state \'S129\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.startStopButton()\'");
            this.o.Value.startStopButton();
            this.Manager.Comment("reaching state \'S137\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.startStopButton\'");
            this.Manager.Comment("reaching state \'S145\'");
            string temp68;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp68 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S153\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp68, "return of getMode, state S153");
            this.Manager.Comment("reaching state \'S161\'");
            string temp69;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp69 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S169\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Running\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Running", temp69, "return of getTimerState, state S169");
            this.Manager.Comment("reaching state \'S177\'");
            bool temp70;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp70 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S185\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp70, "return of isTimerFrozen, state S185");
            this.Manager.Comment("reaching state \'S193\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.modeButton()\'");
            this.o.Value.modeButton();
            this.Manager.Comment("reaching state \'S200\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.modeButton\'");
            this.Manager.Comment("reaching state \'S207\'");
            string temp71;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp71 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S214\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"DateTime\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "DateTime", temp71, "return of getMode, state S214");
            this.Manager.Comment("reaching state \'S221\'");
            string temp72;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp72 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S228\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Running\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Running", temp72, "return of getTimerState, state S228");
            this.Manager.Comment("reaching state \'S235\'");
            bool temp73;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp73 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S242\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp73, "return of isTimerFrozen, state S242");
            this.Manager.Comment("reaching state \'S249\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.modeButton()\'");
            this.o.Value.modeButton();
            this.Manager.Comment("reaching state \'S256\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.modeButton\'");
            this.Manager.Comment("reaching state \'S263\'");
            string temp74;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp74 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S270\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp74, "return of getMode, state S270");
            this.Manager.Comment("reaching state \'S277\'");
            string temp75;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp75 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S284\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Running\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Running", temp75, "return of getTimerState, state S284");
            this.Manager.Comment("reaching state \'S291\'");
            bool temp76;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp76 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S298\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp76, "return of isTimerFrozen, state S298");
            this.Manager.Comment("reaching state \'S305\'");
            this.Manager.EndTest();
        }
        #endregion
        
        #region Test Starting in S4
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void StopwatchTestsS4() {
            this.Manager.BeginTest("StopwatchTestsS4");
            this.Manager.Comment("reaching state \'S4\'");
            stopwatchImp.StopwatchCS temp77;
            this.Manager.Comment("executing step \'call new StopwatchModelProgram#0.StopwatchCS()\'");
            temp77 = new stopwatchImp.StopwatchCS();
            this.Manager.Comment("reaching state \'S5\'");
            this.Manager.Comment("checking step \'return new StopwatchModelProgram#0.StopwatchCS\'");
            TestManagerHelpers.AssertBind<stopwatchImp.StopwatchCS>(this.Manager, this.o, temp77, "this of stopwatchImp.StopwatchCS, state S5");
            this.Manager.Comment("reaching state \'S18\'");
            string temp78;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp78 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S26\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"DateTime\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "DateTime", temp78, "return of getMode, state S26");
            this.Manager.Comment("reaching state \'S34\'");
            string temp79;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp79 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S42\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Reset\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Reset", temp79, "return of getTimerState, state S42");
            this.Manager.Comment("reaching state \'S50\'");
            bool temp80;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp80 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S58\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp80, "return of isTimerFrozen, state S58");
            this.Manager.Comment("reaching state \'S66\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.modeButton()\'");
            this.o.Value.modeButton();
            this.Manager.Comment("reaching state \'S74\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.modeButton\'");
            this.Manager.Comment("reaching state \'S82\'");
            string temp81;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp81 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S90\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp81, "return of getMode, state S90");
            this.Manager.Comment("reaching state \'S98\'");
            string temp82;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp82 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S106\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Reset\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Reset", temp82, "return of getTimerState, state S106");
            this.Manager.Comment("reaching state \'S114\'");
            bool temp83;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp83 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S122\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp83, "return of isTimerFrozen, state S122");
            this.Manager.Comment("reaching state \'S130\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.startStopButton()\'");
            this.o.Value.startStopButton();
            this.Manager.Comment("reaching state \'S138\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.startStopButton\'");
            this.Manager.Comment("reaching state \'S146\'");
            string temp84;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp84 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S154\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp84, "return of getMode, state S154");
            this.Manager.Comment("reaching state \'S162\'");
            string temp85;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp85 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S170\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Running\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Running", temp85, "return of getTimerState, state S170");
            this.Manager.Comment("reaching state \'S178\'");
            bool temp86;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp86 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S186\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp86, "return of isTimerFrozen, state S186");
            this.Manager.Comment("reaching state \'S194\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.startStopButton()\'");
            this.o.Value.startStopButton();
            this.Manager.Comment("reaching state \'S201\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.startStopButton\'");
            this.Manager.Comment("reaching state \'S208\'");
            string temp87;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp87 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S215\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp87, "return of getMode, state S215");
            this.Manager.Comment("reaching state \'S222\'");
            string temp88;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp88 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S229\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Stopped\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Stopped", temp88, "return of getTimerState, state S229");
            this.Manager.Comment("reaching state \'S236\'");
            bool temp89;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp89 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S243\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp89, "return of isTimerFrozen, state S243");
            this.Manager.Comment("reaching state \'S250\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.modeButton()\'");
            this.o.Value.modeButton();
            this.Manager.Comment("reaching state \'S257\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.modeButton\'");
            this.Manager.Comment("reaching state \'S264\'");
            string temp90;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp90 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S271\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"DateTime\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "DateTime", temp90, "return of getMode, state S271");
            this.Manager.Comment("reaching state \'S278\'");
            string temp91;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp91 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S285\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Stopped\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Stopped", temp91, "return of getTimerState, state S285");
            this.Manager.Comment("reaching state \'S292\'");
            bool temp92;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp92 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S299\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp92, "return of isTimerFrozen, state S299");
            this.Manager.Comment("reaching state \'S306\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.modeButton()\'");
            this.o.Value.modeButton();
            this.Manager.Comment("reaching state \'S312\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.modeButton\'");
            this.Manager.Comment("reaching state \'S314\'");
            string temp93;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp93 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S316\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp93, "return of getMode, state S316");
            this.Manager.Comment("reaching state \'S318\'");
            string temp94;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp94 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S320\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Stopped\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Stopped", temp94, "return of getTimerState, state S320");
            this.Manager.Comment("reaching state \'S322\'");
            bool temp95;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp95 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S324\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp95, "return of isTimerFrozen, state S324");
            this.Manager.Comment("reaching state \'S326\'");
            this.Manager.EndTest();
        }
        #endregion
        
        #region Test Starting in S6
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void StopwatchTestsS6() {
            this.Manager.BeginTest("StopwatchTestsS6");
            this.Manager.Comment("reaching state \'S6\'");
            stopwatchImp.StopwatchCS temp96;
            this.Manager.Comment("executing step \'call new StopwatchModelProgram#0.StopwatchCS()\'");
            temp96 = new stopwatchImp.StopwatchCS();
            this.Manager.Comment("reaching state \'S7\'");
            this.Manager.Comment("checking step \'return new StopwatchModelProgram#0.StopwatchCS\'");
            TestManagerHelpers.AssertBind<stopwatchImp.StopwatchCS>(this.Manager, this.o, temp96, "this of stopwatchImp.StopwatchCS, state S7");
            this.Manager.Comment("reaching state \'S19\'");
            string temp97;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp97 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S27\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"DateTime\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "DateTime", temp97, "return of getMode, state S27");
            this.Manager.Comment("reaching state \'S35\'");
            string temp98;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp98 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S43\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Reset\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Reset", temp98, "return of getTimerState, state S43");
            this.Manager.Comment("reaching state \'S51\'");
            bool temp99;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp99 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S59\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp99, "return of isTimerFrozen, state S59");
            this.Manager.Comment("reaching state \'S67\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.modeButton()\'");
            this.o.Value.modeButton();
            this.Manager.Comment("reaching state \'S75\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.modeButton\'");
            this.Manager.Comment("reaching state \'S83\'");
            string temp100;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp100 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S91\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp100, "return of getMode, state S91");
            this.Manager.Comment("reaching state \'S99\'");
            string temp101;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp101 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S107\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Reset\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Reset", temp101, "return of getTimerState, state S107");
            this.Manager.Comment("reaching state \'S115\'");
            bool temp102;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp102 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S123\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp102, "return of isTimerFrozen, state S123");
            this.Manager.Comment("reaching state \'S131\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.startStopButton()\'");
            this.o.Value.startStopButton();
            this.Manager.Comment("reaching state \'S139\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.startStopButton\'");
            this.Manager.Comment("reaching state \'S147\'");
            string temp103;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp103 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S155\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp103, "return of getMode, state S155");
            this.Manager.Comment("reaching state \'S163\'");
            string temp104;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp104 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S171\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Running\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Running", temp104, "return of getTimerState, state S171");
            this.Manager.Comment("reaching state \'S179\'");
            bool temp105;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp105 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S187\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp105, "return of isTimerFrozen, state S187");
            this.Manager.Comment("reaching state \'S195\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.startStopButton()\'");
            this.o.Value.startStopButton();
            this.Manager.Comment("reaching state \'S202\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.startStopButton\'");
            this.Manager.Comment("reaching state \'S209\'");
            string temp106;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp106 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S216\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp106, "return of getMode, state S216");
            this.Manager.Comment("reaching state \'S223\'");
            string temp107;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp107 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S230\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Stopped\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Stopped", temp107, "return of getTimerState, state S230");
            this.Manager.Comment("reaching state \'S237\'");
            bool temp108;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp108 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S244\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp108, "return of isTimerFrozen, state S244");
            this.Manager.Comment("reaching state \'S251\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.startStopButton()\'");
            this.o.Value.startStopButton();
            this.Manager.Comment("reaching state \'S258\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.startStopButton\'");
            this.Manager.Comment("reaching state \'S265\'");
            string temp109;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp109 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S272\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp109, "return of getMode, state S272");
            this.Manager.Comment("reaching state \'S279\'");
            string temp110;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp110 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S286\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Running\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Running", temp110, "return of getTimerState, state S286");
            this.Manager.Comment("reaching state \'S293\'");
            bool temp111;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp111 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S300\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp111, "return of isTimerFrozen, state S300");
            this.Manager.Comment("reaching state \'S307\'");
            this.Manager.EndTest();
        }
        #endregion
        
        #region Test Starting in S8
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        public void StopwatchTestsS8() {
            this.Manager.BeginTest("StopwatchTestsS8");
            this.Manager.Comment("reaching state \'S8\'");
            stopwatchImp.StopwatchCS temp112;
            this.Manager.Comment("executing step \'call new StopwatchModelProgram#0.StopwatchCS()\'");
            temp112 = new stopwatchImp.StopwatchCS();
            this.Manager.Comment("reaching state \'S9\'");
            this.Manager.Comment("checking step \'return new StopwatchModelProgram#0.StopwatchCS\'");
            TestManagerHelpers.AssertBind<stopwatchImp.StopwatchCS>(this.Manager, this.o, temp112, "this of stopwatchImp.StopwatchCS, state S9");
            this.Manager.Comment("reaching state \'S20\'");
            string temp113;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp113 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S28\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"DateTime\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "DateTime", temp113, "return of getMode, state S28");
            this.Manager.Comment("reaching state \'S36\'");
            string temp114;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp114 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S44\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Reset\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Reset", temp114, "return of getTimerState, state S44");
            this.Manager.Comment("reaching state \'S52\'");
            bool temp115;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp115 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S60\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp115, "return of isTimerFrozen, state S60");
            this.Manager.Comment("reaching state \'S68\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.modeButton()\'");
            this.o.Value.modeButton();
            this.Manager.Comment("reaching state \'S76\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.modeButton\'");
            this.Manager.Comment("reaching state \'S84\'");
            string temp116;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp116 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S92\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp116, "return of getMode, state S92");
            this.Manager.Comment("reaching state \'S100\'");
            string temp117;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp117 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S108\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Reset\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Reset", temp117, "return of getTimerState, state S108");
            this.Manager.Comment("reaching state \'S116\'");
            bool temp118;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp118 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S124\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp118, "return of isTimerFrozen, state S124");
            this.Manager.Comment("reaching state \'S132\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.startStopButton()\'");
            this.o.Value.startStopButton();
            this.Manager.Comment("reaching state \'S140\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.startStopButton\'");
            this.Manager.Comment("reaching state \'S148\'");
            string temp119;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp119 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S156\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp119, "return of getMode, state S156");
            this.Manager.Comment("reaching state \'S164\'");
            string temp120;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp120 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S172\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Running\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Running", temp120, "return of getTimerState, state S172");
            this.Manager.Comment("reaching state \'S180\'");
            bool temp121;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp121 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S188\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp121, "return of isTimerFrozen, state S188");
            this.Manager.Comment("reaching state \'S196\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.startStopButton()\'");
            this.o.Value.startStopButton();
            this.Manager.Comment("reaching state \'S203\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.startStopButton\'");
            this.Manager.Comment("reaching state \'S210\'");
            string temp122;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp122 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S217\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp122, "return of getMode, state S217");
            this.Manager.Comment("reaching state \'S224\'");
            string temp123;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp123 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S231\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Stopped\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Stopped", temp123, "return of getTimerState, state S231");
            this.Manager.Comment("reaching state \'S238\'");
            bool temp124;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp124 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S245\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp124, "return of isTimerFrozen, state S245");
            this.Manager.Comment("reaching state \'S252\'");
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.resetLapButton()\'");
            this.o.Value.resetLapButton();
            this.Manager.Comment("reaching state \'S259\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.resetLapButton\'");
            this.Manager.Comment("reaching state \'S266\'");
            string temp125;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getMode()\'");
            temp125 = this.o.Value.getMode();
            this.Manager.Comment("reaching state \'S273\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getMode/\"Timer\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Timer", temp125, "return of getMode, state S273");
            this.Manager.Comment("reaching state \'S280\'");
            string temp126;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.getTimerState()\'");
            temp126 = this.o.Value.getTimerState();
            this.Manager.Comment("reaching state \'S287\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.getTimerState/\"Reset\"\'");
            TestManagerHelpers.AssertAreEqual<string>(this.Manager, "Reset", temp126, "return of getTimerState, state S287");
            this.Manager.Comment("reaching state \'S294\'");
            bool temp127;
            this.Manager.Comment("executing step \'call StopwatchModelProgram#0.isTimerFrozen()\'");
            temp127 = this.o.Value.isTimerFrozen();
            this.Manager.Comment("reaching state \'S301\'");
            this.Manager.Comment("checking step \'return StopwatchModelProgram#0.isTimerFrozen/False\'");
            TestManagerHelpers.AssertAreEqual<bool>(this.Manager, false, temp127, "return of isTimerFrozen, state S301");
            this.Manager.Comment("reaching state \'S308\'");
            this.Manager.EndTest();
        }
        #endregion
    }
}
